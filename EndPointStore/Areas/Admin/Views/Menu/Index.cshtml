@using Store.Application.Services.Menu.Queries.IGetMenu;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model List<MenuItemDto>;
@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
@section Head{
    <style>
        /* .drag-box {
            padding: 1rem;
            margin-top: 1rem;
        }

        .draggable {
            padding: 1rem;
            background-color: white;
            border: 1px solid black;
            margin-top: 15px;
        } */

        .dragging {
            opacity: 0.5;
        }
    </style>
}
<input id="idsetting" type="hidden" data-id-setting="@ViewBag.Id" />
<div class="intro-y flex flex-col sm:flex-row items-center mt-8">
    <h2 class="text-lg font-medium ml-auto">
        تنظیمات منو
    </h2>
</div>
<!-- BEGIN: Personal Information -->
<div class="intro-y box mt-5">
    <div class="p-5">
        <div class="grid grid-cols-12 gap-x-5">
            <div class="col-span-12 xl:col-span-6">
                @* <div>
                <label for="update-profile-form-6" class="form-label">ایمیل</label>
                <input id="update-profile-form-6" type="text" class="form-control" placeholder="متن ورودی" value="denzelwashington@left4code.com" disabled="">
                </div>*@
                <form id="createMenuItem">

                    <div class="mt-3">
                        <label for="update-profile-form-9" class="form-label">عنوان منو</label>
                        <input id="title" type="text" required class="form-control" placeholder="متن ورودی">
                    </div>
                    <div class="mt-3">
                        <label for="update-profile-form-9" class="form-label">آدرس منو</label>
                        <input id="link" type="text" required class="form-control" placeholder="متن ورودی">
                    </div>
                    <div class="mt-3">
                        <label for="update-profile-form-9" class="form-label">کلاس Css</label>
                        <input id="css-class" type="text" class="form-control" placeholder="متن ورودی">
                    </div>

                    <div class="mt-2">
                        <button type="submit" class="btn btn-primary w-20">ایجاد منو</button>
                    </div>
                </form>
                <div class="border border-gray-200 dark:border-dark-5 rounded-md p-5 mt-5">
                    <div class="font-medium flex items-center border-b border-gray-200 dark:border-dark-5 pb-5"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-down w-4 h-4 ml-2"><polyline points="6 9 12 15 18 9"></polyline></svg> منو </div>
                    <div class="mt-5">
                        <div id="seedMenuNewLink" class="list-group col right-panel drag-box">
                            
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-span-12 xl:col-span-6">
                <div id="nested" class="row">
                    <button id="submitMenu" type="button" class=" btn btn-success ml-auto"> ذخیره تغییرات </button>
                    <div id="menu" class="p-3 sort-box drag-box ">
                        <!-- Call the JavaScript function to fetch and generate the menu -->
                    </div>
                    
                </div>
            </div>
        </div>
        <div id="header-footer-modal-preview" class="modal" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <!-- BEGIN: Modal Header -->
                    <div class="modal-header">
                        <h2 class="font-medium text-base ml-auto">ویرایش منو</h2>
                        <div class="dropdown sm:hidden">
                            <a class="dropdown-toggle w-5 h-5 block" href="javascript:;" aria-expanded="false"> <i data-feather="more-horizontal" class="w-5 h-5 text-gray-600 dark:text-gray-600"></i> </a>
                        </div>
                    </div> <!-- END: Modal Header -->
                    <!-- BEGIN: Modal Body -->
                    <div class="modal-body grid grid-cols-1 gap-4 gap-y-3">

                        <div class="col-span-12 sm:col-span-6">
                            <form>
                                <input type="hidden" id="id-menu" name="id">
                                <label for="modal-form-1" class="form-label">عنوان منو</label>
                                <div class="input-form mt-1  intro-y col-span-12 sm:col-span-6">
                                    <input id="title-menu" required type="text" class="form-control" placeholder="عنوان">
                                </div>
                                <label for="modal-form-1" class="form-label">آدرس منو</label>
                                <div class="input-form mt-1  intro-y col-span-12 sm:col-span-6">
                                    <input id="link-menu" required type="text" class="form-control" placeholder="عنوان">
                                </div>
                                <label for="modal-form-1" class="form-label">کلاس استایل</label>
                                <div class="input-form mt-1  intro-y col-span-12 sm:col-span-6">
                                    <input id="style-menu" required type="text" class="form-control" placeholder="عنوان">
                                </div>
                            </form>
                        </div>
                    </div> <!-- END: Modal Body -->
                    <!-- BEGIN: Modal Footer -->
                    <div class="modal-footer text-right">
                        <button type="button" data-dismiss="modal" class="btn btn-outline-secondary w-20 mr-1">لغو</button>
                        <button id="edit-menu" type="submit" class="btn btn-primary w-20">ثبت</button>
                    </div> <!-- END: Modal Footer -->
                </div>
            </div>
        </div> <!-- END: Modal Content -->
        <!-- END: Personal Information -->
    </div>
</div>
@section Scripts{
    <script src="~/AdminTemplate/assets/js/bootstrap-iconpicker.bundle.min.js"></script>

    <script>

        //Conver Menu To Object
        $('#submitMenu').on('click', function () {
            var listItems = $("#menu").children();
            console.log(listItems);
            var menu = [];
            var list = $('#menu > .draggable');
            listItems.each(function (i, elm) {
                var id = $(elm).attr('data-id');
                var title = $(elm).attr('data-title');
                var link = $(elm).attr('data-link');
                var cssClass = $(elm).attr('data-ccs-Class');
                var sub = calMenu($(elm));
                menu.push({ id, title, link, cssClass, sub });
            });
            var Id = $('#idsetting').attr('data-id-setting')
            ajaxFunc("/Admin/Menu/Create", { model: menu, Id }, "POST",
                function (result) {
                    if (result.isSuccess) {
                        successToastify(result.message);
                        setTimeout(function () {
                            location.reload()
                        }, 2000);
                    } else {
                        dangerToastify(result.message)
                    }
                },
                function (error) {
                    dangerToastify("Error System");
                    console.log(error);
                }
            )
        });


        function calMenu(elm) {
            var child = null;
            var list = $(elm).children('.draggable');
            if (list.length > 0) {
                child = [];
                list.each(function (i, elmt) {
                    var id = $(elmt).attr('data-id');
                    var title = $(elmt).attr('data-title');
                    var link = $(elmt).attr('data-link');
                    var cssClass = $(elmt).attr('data-css-Class');
                    var Childt = calMenu($(elmt));
                    child.push({ id, title, link, cssClass, sub: Childt });
                });
            }
            return child;
        }

        var menuContainer = document.getElementById("menu");
        function createMenu(menuItem) {
            var p = document.createElement("p");
            p.setAttribute('id', menuItem.id);
            p.setAttribute('data-id', menuItem.id);
            p.setAttribute('data-title', menuItem.title);
            p.setAttribute('data-link', menuItem.link);
            p.setAttribute('data-ccs-Class', menuItem.cssClass);
            p.setAttribute('data-sub', menuItem.sub);
            p.setAttribute('draggable', 'true');
            p.classList.add('draggable', 'list-group-item');
            //span
            var titleSpan = document.createElement('span');
            titleSpan.innerText = menuItem.title;
            p.appendChild(titleSpan);

            //buttons
            var centeredDiv = document.createElement('p');
            centeredDiv.classList.add('centered-div');

            var deleteButton = document.createElement('button');
            deleteButton.classList.add('btn', 'btn-sm', 'btn-danger', 'remove-menu');
            deleteButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash w-4 h-4"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg>';
            centeredDiv.appendChild(deleteButton);
            
            var editButton = document.createElement('a');
            editButton.classList.add('btn', 'btn-sm', 'btn-primary', 'btn-edit', 'mr-2');
            editButton.id = menuItem.id;
            editButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit-3 w-4 h-4"><path d="M12 20h9"></path><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path></svg>';

            editButton.setAttribute('href', 'javascript:;');
            editButton.setAttribute('data-toggle', 'modal');
            editButton.setAttribute('data-target', '#header-footer-modal-preview');
            centeredDiv.appendChild(editButton);
            p.appendChild(centeredDiv);


            if (menuItem.sub && menuItem.sub.length > 0) {
                menuItem.sub.forEach(function (subItem) {
                    var subP = document.createElement("p");
                    subP.setAttribute('id', subItem.id);
                    subP.setAttribute('data-id', subItem.id);
                    subP.setAttribute('data-title', subItem.title);
                    subP.setAttribute('data-link', subItem.link);
                    subP.setAttribute('data-ccs-Class', subItem.cssClass);
                    subP.setAttribute('data-sub', subItem.sub);
                    subP.setAttribute('draggable', 'true');
                    subP.classList.add('draggable', 'list-group-item');
                    var titleSpanSub = document.createElement('span');
                    titleSpanSub.innerText = subItem.title;
                    subP.appendChild(titleSpanSub);

                    //buttons
                    var centeredDiv = document.createElement('p');
                    centeredDiv.classList.add('centered-div');

                    var deleteButton = document.createElement('button');
                    deleteButton.classList.add('btn', 'btn-sm', 'btn-danger', 'remove-menu');
                    deleteButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash w-4 h-4"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg>';
                    centeredDiv.appendChild(deleteButton);

                    var editButton = document.createElement('a');
                    editButton.classList.add('btn', 'btn-sm', 'btn-primary', 'btn-edit', 'mr-2');
                    editButton.id = menuItem.id;
                    editButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit-3 w-4 h-4"><path d="M12 20h9"></path><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path></svg>';

                    editButton.setAttribute('href', 'javascript:;');
                    editButton.setAttribute('data-toggle', 'modal');
                    editButton.setAttribute('data-target', '#header-footer-modal-preview');
                    centeredDiv.appendChild(editButton);
                    subP.appendChild(centeredDiv);

                    p.appendChild(subP);
                });
            }

            return p;
        }

        var menuItems = @Html.Raw(Json.Serialize(Model));
        menuItems.forEach(function (menuItem) {
            var menuElement = createMenu(menuItem);
            menuContainer.appendChild(menuElement);
        });

        //get random number
        function getRandomInt() {
            var timestamp = new Date().getUTCMilliseconds();
            return Math.floor(Math.random() * timestamp * timestamp);
        }

        $('#createMenuItem').on('submit', function (event) {
            event.preventDefault();
            var id = getRandomInt();
            var title = event.target.title.value;
            var url = event.target.link.value;
            var cssClass = event.target.link.value;
            var p = document.createElement("p");
            p.setAttribute('id', id);
            p.setAttribute('data-id', id);
            p.setAttribute('data-title', title);
            p.setAttribute('data-link', url);
            p.setAttribute('data-ccs-Class', cssClass);
            p.setAttribute('draggable', 'true');
            p.classList.add('draggable', 'list-group-item');
            //span
            var titleSpan = document.createElement('span');
            titleSpan.innerText = title;
            p.appendChild(titleSpan);

            //buttons
            // var centeredDiv = document.createElement('p');
            // centeredDiv.classList.add('centered-div');

            // var deleteButton = document.createElement('button');
            // deleteButton.classList.add('btn', 'btn-sm', 'btn-danger', 'remove-menu');
            // deleteButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash w-4 h-4"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path></svg>';
            // centeredDiv.appendChild(deleteButton);

            // var editButton = document.createElement('a');
            // editButton.classList.add('btn', 'btn-sm', 'btn-primary', 'btn-edit', 'mr-2');
            // editButton.id = id;
            // editButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit-3 w-4 h-4"><path d="M12 20h9"></path><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path></svg>';

            // editButton.setAttribute('href', 'javascript:;');
            // editButton.setAttribute('data-toggle', 'modal');
            // editButton.setAttribute('data-target', '#header-footer-modal-preview');
            // centeredDiv.appendChild(editButton);
            // p.appendChild(centeredDiv);

            document.getElementById("seedMenuNewLink").appendChild(p);
            eventReload();
            $(this).trigger("reset");

        });
        //
        $('.remove-menu').on('click', function () {
            var menuItem = $(this).closest('.draggable');
            menuItem.remove();
        });

        //Fill edit
        $('.btn-edit').on('click', function () {

            var itemListMenu = $(this).parents('.draggable');
            var currentId = itemListMenu.attr('data-id');
            console.log("cid", currentId);

            itemListMenu.attr('data-title')
            $('#id-menu').val(currentId);
            $('#title-menu').val(itemListMenu.attr('data-title'));
            $('#link-menu').val(itemListMenu.attr('data-link'));
            $('#style-menu').val(itemListMenu.attr('data-ccs-class'));
            $("#header-footer-modal-preview").show();
        });

        //change value edited
        $('#edit-menu').on('click', function (event) {
            event.preventDefault();
            var modalId = $('#id-menu').val();
            var title = $('#title-menu').val();
            var link = $('#link-menu').val();
            var style = $('#style-menu').val();
            var listItemsMenu = $(".draggable");
            listItemsMenu.each(function (index, element) {
                console.log("data-id", $(element).attr('data-id'));
                console.log("modal id", modalId);
                var dataId = $(element).attr('data-id');
                if (dataId == modalId) {
                    $(element).find('span').text(title);
                    $(element).attr('data-title', title);
                    $(element).attr('data-link', link);
                    $(element).attr('data-ccs-class', style);
                    $("#header-footer-modal-preview").hide();
                }
            });

        });
    
        //drage

        function eventReload() {
            let draggables = document.querySelectorAll(".draggable");
            let dragBoxes = document.querySelectorAll(".drag-box");

        draggables.forEach((dragItem) => {
            dragItem.addEventListener("dragstart", (e) => {
                dragItem.classList.add("dragging");
                e.dataTransfer.setData("mydata", e.target.id);
            });

            dragItem.addEventListener("dragend", (e) => {
                dragItem.classList.remove("dragging");
            });
        });

        dragBoxes.forEach((dragBox) => {
            dragBox.addEventListener("dragover", (e) => {
                e.preventDefault();
                const afterElement = getDragAfterElement(dragBox, e.clientY);
                const draggable = document.querySelector(".dragging");
                if (afterElement == null) {
                    dragBox.appendChild(draggable);
                } else {
                    dragBox.insertBefore(draggable, afterElement);
                }
            });

            dragBox.addEventListener("drop", (e) => {
                e.preventDefault();
                const dataid = e.dataTransfer.getData("mydata");
                if (!dataid) return;
                e.target.appendChild(document.getElementById(dataid));

                draggables.forEach((drg) => {
                    drg.classList.remove("dragging");
                });

                console.log("drop");
            });
        });
        }
        eventReload();

        function getDragAfterElement(dragBox, y) {
            const draggableElements = [
                ...dragBox.querySelectorAll(".draggable:not(.dragging)"),
            ];
            return draggableElements.reduce(
                (closest, child) => {
                    const box = child.getBoundingClientRect();
                    const offset = y - box.top - box.height / 2;
                    if (offset < 0 && offset > closest.offset) {
                        return { offset: offset, element: child };
                    } else {
                        return closest;
                    }
                },
                { offset: Number.NEGATIVE_INFINITY }
            ).element;
        }


    </script>
        }
