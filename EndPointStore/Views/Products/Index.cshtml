@addTagHelper *, LazZiya.TagHelpers
@using EndPointStore.Models.ProductsViewModel;
@using Store.Common.Constant.Settings;
@await Component.InvokeAsync("HeaderTop")
@model ProductsViewModel;
@{
    ViewData["Title"] = "Arikeh Collection ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<section class="wow animate__fadeIn parallax bg-extra-dark-gray" data-parallax-background-ratio="0.5" style="visibility: visible; animation-name: fadeIn; background-position: 0% 0px;">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8 col-md-6 text-center ">
                <!-- start page title -->
                <h1 class="alt-font text-white-2 font-weight-600 mb-0 text-uppercase">Arikeh Collection </h1>
                <!-- end page title -->
            </div>
        </div>
    </div>
</section>
@if(Model.GetSubCategorySites?.Count>1)
{
    <div class="mt-5 col-12 justify-content-center text-center p-0 ">
        <ul class="d-flex justify-content-center nav nav-pills mt-5">
            <li class="d-flex align-items-center nav-item">
                <div class=" font-weight-bold mr-1 text-medium-gray text-uppercase">Filter by Knot Density :</div>
            </li>
            
                @foreach (var item in Model.GetSubCategorySites)
                {

                    <li class="nav-item">
                        @if (item.Slug == "All")
                        {
                            <a id="@item.Id" class="navhover btn   btn-lg  alt-font text-medium-gray text-uppercase text-small" data-toggle="pill" href="/products?category=@(item.MainCategory)">@item.Name</a>
                        }
                        else
                        {
                            <a id="@item.Id" class="navhover btn  btn-lg alt-font text-medium-gray text-uppercase text-small" data-toggle="pill" href="/products?category=@(item.MainCategory)&subcategory=@(string.IsNullOrEmpty(item.Slug)?item.Id:item.Slug.Replace(" ","-"))">@item.Name</a>
                        }
                    </li>
                }
           
        </ul>
    </div>

}
<!-- start post content section -->
<section class="wow animate__fadeIn">
    <div class="container">
        <div class="row">
            <div class="col-12 blog-content">
                @if (Model.ResultProductsForSite.Products.Count == 0)
                {
                <div class="w-100 d-flex justify-content-center">
                    <h3>Not Found Any Product</h3>
                </div>
                }
                else
                {
                <ul class="shop-mir blog-grid blog-wrapper grid grid-loading grid-4col xl-grid-4col lg-grid-4col md-grid-3col sm-grid-3col xs-grid-2col hover-option4 blog-post-style3 gutter-extra-large">
                    <li class="grid-sizer"></li>
                    <!-- start post item -->
                        @foreach (var item in Model.ResultProductsForSite.Products)
                        {
                            <li class="grid-item last-paragraph-no-margin text-center text-sm-start wow animate__fadeInUp">
                                <div class="blog-post bg-light-gray">
                                    <div class="blog-post-images overflow-hidden position-relative">
                                        <a href="/products/detail/@(string.IsNullOrEmpty(item.Slug)?item.Id:item.Slug.Replace(" ","-"))">
                                            <img src="@item.Image" alt="">
                                            <div class="blog-hover-icon"><span class="text-extra-large font-weight-300"><i class="fas fa-eye"></i></span></div>
                                        </a>
                                    </div>
                                    <div class="post-details padding-40px-all md-padding-20px-all">
                                        <a href="/products/detail/@(string.IsNullOrEmpty(item.Slug)?item.Id:item.Slug.Replace(" ","-"))" class="alt-font post-title text-medium text-extra-dark-gray w-100 d-block lg-w-100 margin-15px-bottom">@item.Title</a>
                                        <div class="separator-line-horrizontal-full bg-medium-gray margin-20px-tb"></div>
                                        <div class="shop-btn d-flex justify-content-center author">
                                            <a href="/products/detail/@(string.IsNullOrEmpty(item.Slug)?item.Id:item.Slug.Replace(" ","-"))" class="btn btn-small btn-dark-gray text-small border-radius-4 lg-margin-15px-bottom d-table d-lg-inline-block md-margin-lr-auto"><i class="fas fa-eye icon-very-small margin-5px-right no-margin-left" aria-hidden="true"></i> view </a>
                                        </div>
                                    </div>
                                </div>
                            </li>

                        }

                    
                    <!-- end post item -->
                </ul>
                }
            </div>
        </div>
        <!-- start pagination -->
        @Html.Raw(Model.ResultProductsForSite.Paginate)
        <!-- end pagination --> 
    </div>
</section>

@section Scripts{
 <script>
        let getId = sessionStorage.getItem("id")||'1';
        let activeItem = document.getElementById(getId);
        activeItem.classList.add('active-me')
        const navButtons = document.querySelectorAll('.navhover');
        navButtons.forEach(button => {
            button.addEventListener('click', (e) => {
                sessionStorage.setItem("id", e.currentTarget.id)
                navButtons.forEach(btn => {
                    btn.classList.remove('active-me');
                });

            });
        });
     //Filter Product
        function sendParameter(value) {
            var searchKey = '@Html.Raw(Context.Request.Query["SearchKey"])'; // استفاده از براکت و تگ
            var ordering = ""; // مقدار ordering بر اساس گزینه انتخاب شده

            if (value === "0") {
                ordering = "NotOrder";
            } else if (value === "1") {
                ordering = "MostVisited";
            } else if (value === "2") {
                ordering = "Bestselling";
            } else if (value === "3") {
                ordering = "MostPopular";
            } else if (value === "4") {
                ordering = "theNewest";
            } else if (value === "5") {
                ordering = "Cheapest";
            } else if (value === "6") {
                ordering = "theMostExpensive";
            }

            var url = "/products/index?Searchkey=" + searchKey + "&ordering=" + ordering;
           location.replace(url);
        }
     //Show Detail Modal
        $(".show-detail-modal").on('click', function () {
            let productId = $(this).attr('data-itemid');
            getProductList(productId);
            //$("#filemanager-body").html(loading);
        })
        //Get Product List
        function getProductList(productId) {
            var postData = {
                productId
            };
            ajaxFunc("GetProductDetail", postData, "POST",
                function (result) {
                    let data=result.data;
                    if (result.isSuccess) {
                        //Stars
                        let stars="";
                        for(let i=1;i<=data.star;i++)
                        {
                            stars += `<i class="active icofont-star"></i>`
                        }
                        for (let i = 1; i <=(5 - data.star); i++) {
                            stars += `<i class="icofont-star"></i>`
                        }
                        //Media
                        let renderImages = "";
                        data.urlImagList.map(item=>{
                            renderImages += `<li><img src="${item.url}" alt="product"></li>`;
                        });
                        //Tags
                        let tags= "";
                        data.tags.map(item => {
                            tags += `<li><a href="#">${item.name}</a></li>`;
                        });
                        //
                        let html = `<div class="col-md-6 col-lg-6">
                                    <div class="view-gallery">
                                        <div class="view-label-group">
                                                  ${((data.newProduct) ?`<label class="view-label new">جدید</label>` : ``)}
                                                  ${((data.discount > 0) ? `<label class="view-label off">%${data.discount}</label>` : ``)}
                                                </div>
                                        <ul class="preview-slider slider-arrow">
                                                   ${renderImages}
                                        </ul>
                                        <ul class="thumb-slider">
                                                    ${renderImages}
                                        </ul>
                                    </div>
                                </div>
                                <div class="col-md-6 col-lg-6">
                                    <div class="view-details">
                                        <h3 class="view-name">
                                            <a href="product-video.html">${data.name}</a>
                                        </h3>
                                        <div class="view-meta">
                                            <p>کد محصول:<span>${data.codeProduct}</span></p>
                                                    <p>برند:<a href="#">${data.brand}</a></p>
                                        </div>
                                        <div class="view-rating">
                                                    ${stars}
                                        </div>
                                        <h3 class="view-price">
                                            ${((data.price >= data.lastPrice) ? `<span>${data.price} ${data.unit}</span>` : `<del>${data.lastPrice} ${data.unit}</del><span>${data.price} ${data.unit}</span>`)}
                                           
                                        </h3>
                                        <p class="view-desc">${data.description}</p>
                                        <div class="view-list-group">
                                            <label class="view-list-title">تگ ها:</label>
                                            <ul class="view-tag-list">
                                              ${tags}
                                            </ul>
                                        </div>
                                        <div class="view-list-group">
                                            <label class="view-list-title">اشتراک:</label>
                                            <ul class="view-share-list">
                                                <li><a href="#" class="icofont-facebook" title="Facebook"></a></li>
                                                <li><a href="#" class="icofont-twitter" title="Twitter"></a></li>
                                                <li><a href="#" class="icofont-linkedin" title="Linkedin"></a></li>
                                                <li><a href="#" class="icofont-instagram" title="Instagram"></a></li>
                                            </ul>
                                        </div>
                                        <div class="view-add-group">
                                            <button class="product-add" title="افزودن به سبد خرید">
                                                <i class="fas fa-shopping-basket"></i>
                                                <span>افزودن به سبد خرید</span>
                                            </button>
                                            <div class="product-action">
                                                <button class="action-minus" title="کم کردن"><i class="icofont-minus"></i></button>
                                                <input class="action-input" title="تعداد مورد نیاز" type="text" name="quantity" value="1">
                                                <button class="action-plus" title="زیاد کردن"><i class="icofont-plus"></i></button>
                                            </div>
                                        </div>
                                        <div class="view-action-group">
                                            <a class="view-wish wish" href="#" title="افزودن به لیست علاقه مندی ها">
                                                <i class="icofont-heart"></i>
                                                <span>افزودن به علاقه مندی</span>
                                            </a>
                                            <a class="view-compare" href="compare.html" title="مقایسه با دگر محصولات">
                                                <i class="fas fa-random"></i>
                                                <span>مقایسه کن</span>
                                            </a>
                                        </div>
                                    </div>
                                </div>`;
                      
                        $("#product-detail-modal").html(html);
                        $("#product-view").modal('show');
                        $('.preview-slider').slick({
                            slidesToShow: 1,
                            slidesToScroll: 1,
                            arrows: true,
                            fade: true,
                            rtl: true,
                            asNavFor: '.thumb-slider',
                            prevArrow: '<i class="icofont-arrow-right dandik"></i>',
                            nextArrow: '<i class="icofont-arrow-left bamdik"></i>',
                            responsive: [
                                {
                                    breakpoint: 576,
                                    settings: {
                                        slidesToShow: 1,
                                        slidesToScroll: 1,
                                        arrows: true,
                                    }
                                }
                            ]
                        });

                        $('.thumb-slider').slick({
                            slidesToShow: 3,
                            slidesToScroll: 1,
                            asNavFor: '.preview-slider',
                            rtl: true,
                            dots: false,
                            arrows: false,
                            centerMode: true,
                            focusOnSelect: true,
                            responsive: [
                                {
                                    breakpoint: 992,
                                    settings: {
                                        slidesToShow: 3,
                                        slidesToScroll: 1,
                                    }
                                },
                                {
                                    breakpoint: 768,
                                    settings: {
                                        slidesToShow: 3,
                                        slidesToScroll: 1,
                                    }
                                },
                                {
                                    breakpoint: 576,
                                    settings: {
                                        slidesToShow: 3,
                                        slidesToScroll: 1,
                                    }
                                },
                                {
                                    breakpoint: 400,
                                    settings: {
                                        slidesToShow: 2,
                                        slidesToScroll: 1,
                                    }
                                }
                            ]
                        });
                    }
                },
                function (error) {
                    console.log(error);
                }
            )
        }
        //Loading
        let loading =`<div class="intro-y col-span-12 sm:col-span-12 md:col-span-12 2xl:col-span-12">
                            <div class="col-span-12 sm:col-span-12 xl:col-span-12 flex flex-col justify-end items-center">
                                <svg width="30" viewBox = "0 0 45 45" xmlns = "http://www.w3.org/2000/svg" stroke = "rgb(45, 55, 72)" class="w-8 h-8">
                                    <g fill="none" fill - rule="evenodd" transform = "translate(1 1)" stroke - width="3">
                                        <circle cx="22" cy = "22" r = "6" stroke - opacity="0">
                                            <animate attributeName="r" begin = "1.5s" dur = "3s" values = "6;22" calcMode = "linear" repeatCount = "indefinite"> </animate>
                                                <animate attributeName = "stroke-opacity" begin = "1.5s" dur = "3s" values = "1;0" calcMode = "linear" repeatCount = "indefinite"> </animate>
                                                    <animate attributeName = "stroke-width" begin = "1.5s" dur = "3s" values = "2;0" calcMode = "linear" repeatCount = "indefinite"> </animate>
                                                        </circle>
                                                        <circle cx = "22" cy = "22" r = "6" stroke - opacity="0">
                                                            <animate attributeName="r" begin = "3s" dur = "3s" values = "6;22" calcMode = "linear" repeatCount = "indefinite"> </animate>
                                                                <animate attributeName = "stroke-opacity" begin = "3s" dur = "3s" values = "1;0" calcMode = "linear" repeatCount = "indefinite"> </animate>
                                                                    <animate attributeName = "stroke-width" begin = "3s" dur = "3s" values = "2;0" calcMode = "linear" repeatCount = "indefinite"> </animate>
                                                                        </circle>
                                                                        <circle cx = "22" cy = "22" r = "8">
                                                                            <animate attributeName="r" begin = "0s" dur = "1.5s" values = "6;1;2;3;4;5;6" calcMode = "linear" repeatCount = "indefinite"> </animate>
                                                                                </circle>
                                                                                </g>
                                                                                </svg>
                                                                                <div class="text-center text-xs mt-2" > لطفا منتظر بمانید...</div>
                                                                                    </div>
                                                                                    </div>`;
    </script>
}


